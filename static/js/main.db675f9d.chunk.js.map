{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","style","zIndex","margin","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCMCQ,EAXF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,8DAAf,UACE,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAA1B,cACnB,gCACE,6BAAKF,IACL,4BAAIC,WCeGK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACI,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACF,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIGC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,O,wBC0CHI,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAER,YAAaO,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACXhB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBY,MAAM,8CACH/B,MAAK,SAACgC,GAAD,OAAcA,EAASC,UAC5BjC,MAAK,SAACkC,GAAD,OAAW,EAAKP,SAAS,CAAEb,OAAQoB,S,oBAM7C,WAAU,IAAD,OACDC,EAAiBC,KAAKN,MAAMhB,OAAOuB,QAAO,SAACvB,GAC/C,OAAOA,EAAOP,KACX+B,cACAC,SAAS,EAAKT,MAAMX,YAAYmB,kBAErC,OAAiC,IAA7BF,KAAKN,MAAMhB,OAAO0B,OACb,oBAAI9B,UAAU,KAAd,uBAGL,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,qBAAK+B,MAAO,CAAEC,OAAQ,OAAtB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,CAAWtB,aAAcgB,KAAKX,qBAGlC,qBAAKgB,MAAO,CAAEC,OAAQ,KAAMC,OAAQ,SAApC,SACE,cAAC,EAAD,CAAU7B,OAAQqB,a,GApCZS,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BpD,M","file":"static/js/main.db675f9d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib f8 br4 pa1 ma2 grow bw2 shadow-5 w-30\">\r\n      <img alt=\"Robo\" src={`https://robohash.org/${id}?300x300`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n    \t<div>\r\n    \t\t{\r\n    \t\t\trobots.map((user, i) => {\r\n    \t\t\t\treturn (\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n    \t\t\t})\r\n    \t\t}\r\n    \t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"./Scroll\";\r\nimport Sticky from \"react-sticky-el\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter((robots) => {\r\n      return robots.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchfield.toLowerCase());\r\n    });\r\n    if (this.state.robots.length === 0) {\r\n      return <h1 className=\"tc\"> LOADING </h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f2\">RoboFriends</h1>\r\n          <div style={{ zIndex: \"100\" }}>\r\n            <Sticky>\r\n              <SearchBox searchChange={this.onSearchChange} />\r\n            </Sticky>\r\n          </div>\r\n          <div style={{ zIndex: \"-1\", margin: \"100px\" }}>\r\n            <CardList robots={filteredRobots} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}